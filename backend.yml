- name: configuring backend
  hosts: backend
  become: yes
  tasks:
    - name: dnf module disable
      ansible.builtin.command: dnf module disable nodejs -y
       
    - name: dnf module enable
      ansible.builtin.command: dnf module enable nodejs:20 -y


    - name: Installing nodejs
      ansible.builtin.package:
        name: "{{item}}"
        state: present  
      loop:
        - mysql  

    - name: Create expense user
      ansible.builtin.user:
        name: expense
        state: present   


    - name: Ensure the directory /app exists
      ansible.builtin.file:
        path: /app
        state: directory   

    - name: Download the application code
      ansible.builtin.get_url:
        url: "https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip"
        dest: /tmp/backend.zip  
    
    - name: unarchieve
      ansible.builtin.unarchive:
        src: /tmp/backend.zip    # Path to the zip file
        dest:  /app            # Directory to extract to
        remote_src: yes  

    - name: ansible module to install dependencies
      ansible.builtin.command: npm install
      args:
       chdir: /app

    - name: Copy backend service file
      ansible.builtin.copy:
        src: backend.service 
        dest: /etc/systemd/system/backend.service   

    - name: Install PyMySQL
      ansible.builtin.pip:
        name: "{{item}}"
        state: present
      loop:
         - PyMySQL
         - cryptography  


    - name: Ensure MySQL database exists
      community.mysql.mysql_db:
        name: all
        state: import
        target: /app/schema/backend.sql
        login_user: root
        login_password: ExpenseApp@1
        login_host: mysql.daws83s.shop

    - name: daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true
        state: restarted
        name: backend   
         